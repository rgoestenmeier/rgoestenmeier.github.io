#!/usr/local/bin/bash
	set -u

#-------------------------------------------------------------------------------
	_DEPLOY_VERSION=2.2.0-02

#-------------------------------------------------------------------------------
	ARGV=$BASH_ARGV

	REPOSITORIES=/Users/Shared/CLOUD/Development.GitHub/Repositories.FromGithub/repositories

	_DIRENV_CLI="$(which direnv_cli)"
	[[ -h "$_DIRENV_CLI" ]] && _DIRENV_CLI="$(readlink "$_DIRENV_CLI")"

	_DIRENV_ROOT="$(dirname "$_DIRENV_CLI")"

	SELF="$(basename "$ARGV")"
	HERE="$(cd $(dirname "$ARGV"); pwd)"
	HERE_SHORT="$(echo "$HERE" | sed "1,\$s#$REPOSITORIES/#<REPOSITORIES>/#")"

	export DIRENV_BASE="$HERE"
	export DIRENV_HOME="$HERE/.env"

	DIRENV_FILE_ENVRC="$DIRENV_BASE/.envrc"

	DIRENV_NAME_CONFIG="config"
	DIRENV_NAME_SSHENV="ssh-environment"
	DIRENV_NAME_SSHUSR="ssh-user"

	DIRENV_FILE_CONFIG="$DIRENV_HOME/$DIRENV_NAME_CONFIG"
	DIRENV_FILE_SSHENV="$DIRENV_HOME/$DIRENV_NAME_SSHENV"
	DIRENV_FILE_SSHUSR="$DIRENV_HOME/$DIRENV_NAME_SSHUSR"

	[[ -f "$DIRENV_FILE_CONFIG" ]] && eval $(grep -E '^use_' $DIRENV_FILE_CONFIG | tr "[:lower:]" "[:upper:]")

	export SSH_ENV="$DIRENV_FILE_SSHENV"

	export SSH_USR="default"
	[[ -f "$DIRENV_FILE_SSHUSR" ]] && export SSH_USR="$(< $DIRENV_FILE_SSHUSR)"


status_timer() {
	_P1="${1:-}"; shift
	_P2="${2:-}"

	# USE_... YES/NO/MISSING
	case "${_P2^^}" in
		"-")	_YSN_PRINT=NO	;;
		"NO")	_YSN_PRINT=NO	;;
		*)		_YSN_PRINT=YES	;;
	esac

	_TIMESTAMP="$(date '+%H:%M:%S') "
	_TIMESTAMP=""

	if [[ $_YSN_PRINT == YES ]]; then
		printf "%s%-10s: " "$_TIMESTAMP" "$_P1"
	fi
}

status() {
	_P1="${1:-}"; shift		# Komponente: node, ionic, angular, python, ...
	_P2="${1:-}"; shift		# USE_....
	_P3="${1:-}"; shift		# Enabled/Missing
	_P4="${1:-}"; shift		# Version
	_P5="$*"				# Pfad

	# USE_... YES/NO/MISSING
	_P2="${_P2^^}"

	case "$_P2" in
		"-")	_YSN_PRINT=NO			;;
		"NO")	_YSN_PRINT=NO			;;
		*)		_YSN_PRINT=YES; _P2=YES	;;
	esac

	if [[ "$_P3" == "Enabled"  ]]; then
		if [[ "$_P4" == "HERE" ]]; then
			_P4="-"
			_P4="NOT FOUND"
		fi
	fi

	case "$_P3" in
		YES)	_P3=		;;
		NO)		_P3=Nein	;;
	esac

	_YSN_PRINT=YES
	if [[ $_YSN_PRINT == YES ]]; then
		printf "%-10s | %-20s  %s\n" "$_P3" "$_P4" "$_P5"
	fi
}

use_git() {
	export _GIT_USER=$(< $HERE/.env/ssh-user)
	export _GIT_EMAIL=$_GIT_USER@via-internet.de

	git config --local user.email $_GIT_EMAIL 2>&-
}


use_ssh_agent() {
	_START=${#SSH_ENV}
	_REL_PATH="${DIRENV_HOME:$_START}"

	status  "SSH Agent"     ""	"Init"	""							"$_REL_PATH"
	/usr/bin/ssh-agent | sed 's/^echo/#echo/' >"${SSH_ENV}"

	chmod 600 "${SSH_ENV}"
	. "${SSH_ENV}" >/dev/null
}

use_ssh() {
	if [[ ! -f "${SSH_ENV}" ]]; then
		use_ssh_agent;
	else
		. "${SSH_ENV}" > /dev/null
		ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
			use_ssh_agent;
		}
	fi

	ssh-add -q -D
	ssh-add -q ~/.ssh/id_rsa_$SSH_USR
}

use_python_venv() {
	export DIRENV_STATUS_HAS_PYTHON=NO
	export DIRENV_STATUS=

	export _PYTHON_PATH="-"
	export _PYTHON_VERSION="-"

	if [[ "YES" == "$USE_PYTHON" ]]; then
		if [[ ! -f .env/python/bin/activate ]]; then
			export DIRENV_STATUS=Missing
		else
			export DIRENV_STATUS=Enabled
			export DIRENV_STATUS_HAS_PYTHON=YES
			. .env/python/bin/activate

			export _PYTHON_PATH="$(show_path python)"
			export _PYTHON_VERSION="$(python --version 2>&-|cut -d' ' -f2)"

			export PIP_DOWNLOAD_CACHE=${_DIRENV_ROOT}/cache/pip
		fi
	else
		export DIRENV_STATUS=Disabled
	fi
}

use_flutter() {
	export _FLUTTER_HOME="/Users/Shared/CLOUD/Development.Flutter/current"
	PATH_add $_FLUTTER_HOME/bin:$PATH

	export _FLUTTER_PATH="$(which flutter)"
	export _FLUTTER_VERSION="$(flutter  --version 2>&-|head -1|cut -d' ' -f2)"

}

use_android() {
	export _ANDROID_HOME=/Users/Shared/CLOUD/DevApps/Android/SDK
	export _ANDROID_PATH=$_ANDROID_HOME/tools/bin

	export ANDROID_HOME="$_ANDROID_HOME"
	export ANDROID_SDK=$ANDROID_HOME

	PATH_add $ANDROID_SDK/platform-tools:$ANDROID_SDK/tools:$ANDROID_SDK/tools/bin:$ANDROID_SDK/emulator:$PATH

	export _ANDROID_VERSION="$(android  --version 2>&-|head -1|cut -d' ' -f2)"
}

use_fastlane() {
	export _FASTLANE_HOME="$HOME/.fastlane"
	export _FASTLANE_PATH="$HOME/bin"

	PATH_add $_FASTLANE_PATH

	export _FASTLANE_VERSION="$(fastlane --version 2>&-|tail -1|cut -d' ' -f2)"
}

use_yarn() {
	export _YARN_PATH="$(show_path yarn)"
	export _YARN_VERSION="$(yarn --version 2>&-)"
}

use_ionic() {
	export _IONIC_PATH="$(show_path ionic)"
	export _IONIC_VERSION="$(ionic --version 2>&-)"
}

use_angular() {
	export _ANGULAR_PATH="$(show_path ng)"
	export _ANGULAR_VERSION="$(ng version 2>&- | grep 'Angular CLI' | cut -c14- 2>&-)"
}

show_path() {
	local _REL_PATH="$(which "$1")"

	_START=${#HERE}

	_REL_PATH="${_REL_PATH:$_START}"

	echo "HERE$_REL_PATH"
}

use_config_export() {
	local _VAR; _VAR="$1";			shift
	local _VAL; _VAL="${1:-MISSING}";	shift

	case $_VAL in
		true|TRUE)	_VAL=YES	;;
		false|FALSE)	_VAL=NO		;;
	esac

	export $_VAR=$_VAL
}

use_config() {
	[[ -f "$DIRENV_HOME/.envrc.config" ]] && eval $(grep -E '^use_' $DIRENV_HOME/.envrc.config | tr "[:lower:]" "[:upper:]")

	use_config_export USE_IONIC		${USE_IONIC:-NO}
	use_config_export USE_ANGULAR	${USE_ANGULAR:-NO}
	use_config_export USE_NODE		${USE_NODE:-NO}
	use_config_export USE_FLUTTER	${USE_FLUTTER:-NO}
	use_config_export USE_DOTNET	${USE_DOTNET:-NO}
	use_config_export USE_PYTHON	${USE_PYTHON:-NO}
	use_config_export USE_FASTLANE	${USE_FASTLANE:-NO}
	use_config_export USE_YARN		${USE_YARN:-NO}
	use_config_export USE_ANDROID	${USE_ANDROID:-NO}
}

show_config() {
	echo "USE_IONIC   = $USE_IONIC"
	echo "USE_ANGULAR = $USE_ANGULAR"
	echo "USE_NODE    = $USE_NODE"
	echo "USE_FLUTTER = $USE_FLUTTER"
	echo "USE_DOTNET  = $USE_DOTNET"
	echo "USE_PYTHON  = $USE_PYTHON"
	echo "USE_FASTLANE= $USE_FASTLANE"
	echo "USE_YARN    = $USE_YARN"
	echo "USE_ANDROID = $USE_ANDROID"
}


#-------------------------------------------------------------------------------
use_config

#-------------------------------------------------------------------------------
status_timer	"HERE" ""
status  		"HERE" ""	"Enabled"	"$_DEPLOY_VERSION"	"$HERE_SHORT"

#status_timer	"ROOT" ""
#status  		"ROOT" ""	"Enabled"	""					"$_DIRENV_ROOT"

#-------------------------------------------------------------------------------
export NODE_VERSIONS="$DIRENV_HOME/node"

export _NODE_VERSION="-"
export _NODE_PATH="-"
export _NPM_VERSION="-"
export _NPM_PATH="-"

if [[ "$USE_NODE" == "YES" ]]; then
	status_timer	"Node"	"YES"
	if [[ -d "$NODE_VERSIONS" ]]; then
		_NODE_VERSION="$(ls -1rt "$NODE_VERSIONS" | sed '1,$s/^v//' |sort -n |tail -1)"

		use node $_NODE_VERSION
		export PATH="$NODE_VERSIONS/v$_NODE_VERSION/bin:$DIRENV_HOME/bin:$PATH"

		# export _NODE_VERSION="$(node --version 2>&- | sed '1,$s/v//g' 2>&-)"
		export _NODE_PATH="$(show_path node)"
		export _NPM_VERSION="$(npm --version 2>&-)"
		export _NPM_PATH="$(show_path npm)"
	fi

	status  		"Node"	"$USE_NODE"	"Enabled"	"$_NODE_VERSION"		"$_NODE_PATH"
	status_timer	"NPM"	"YES"
	status  		"NPM"	"$USE_NODE"	"Enabled"	"$_NPM_VERSION"			"$_NPM_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_YARN" == "YES" ]]; then
	status_timer	"Yarn"		"YES"
	use_yarn
	status  	"Yarn"		"$USE_YARN"	"Enabled"	"$_YARN_VERSION"		"$_YARN_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_IONIC" == "YES" ]]; then
	status_timer	"Ionic"		"YES"
	use_ionic
	status  		"Ionic"		"$USE_IONIC"	"Enabled"	"$_IONIC_VERSION"		"$_IONIC_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_ANGULAR" == "YES" ]]; then
	status_timer	"Angular"	"YES"
	use_angular
	status  		"Angular"	"$USE_ANGULAR"	"Enabled"	"$_ANGULAR_VERSION"		"$_ANGULAR_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_FLUTTER" == "YES" ]]; then
	status_timer	"Flutter"	"YES"
	use_flutter
	status  		"Flutter"	"$USE_FLUTTER"	"Enabled"	"$_FLUTTER_VERSION"		"$_FLUTTER_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_FASTLANE" == "YES" ]]; then
	status_timer	"Fastlane"	"$USE_FASTLANE"
	use_fastlane
	status  		"Fastlane"	"$USE_FASTLANE"	"Enabled"	"$_FASTLANE_VERSION"	"$_FASTLANE_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_ANDROID" == "YES" ]]; then
	status_timer	"Android"	"$USE_ANDROID"
	use_android
	status   		"Android"	"$USE_ANDROID"	"$_ANDROID_VERSION"	"$_ANDROID_PATH"
fi

#-------------------------------------------------------------------------------
if [[ "$USE_PYTHON" == "YES" ]]; then
	status_timer	"Python"	"$USE_PYTHON"
	use_python_venv
	status  		"Python"	"$USE_PYTHON"	"$DIRENV_STATUS"	"$_PYTHON_VERSION"		"$_PYTHON_PATH"
fi

#-------------------------------------------------------------------------------
	status_timer	"Git"		"YES"
	use_git
	status  		"Git"		"YES"			"Enabled"			""						"$_GIT_EMAIL"

#-------------------------------------------------------------------------------
status_timer		"SSH"		"YES"
use_ssh
status  			"SSH"		"YES"		"Enabled" "$SSH_AGENT_PID"		"$(ssh-add  -l | cut -d' ' -f3)"
